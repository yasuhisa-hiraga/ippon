// **********************************************************
// サーバーへのファイルアップロード関係
// Hiraga 2015/09/17 開始
// Hiraga 2016/10/28 fs.renameだと連続した同名ファイルを処理したとき失敗する場合が有るのでやめた
// Hiraga 2016/10/28 同名ファイルがworkingDirに同時にくるとまずいので、先客がいる場合はエラーを返すようにした
// **********************************************************
var fs      = require('fs');
var async   = require('async');
var exec    = require('child_process').exec;
/////////////////////////////////////////////////////////////
//　アップロードの受け付け
// uploadFiles : クライアントから送られてきたファイルのデータ。req.files.uploadFiles
/////////////////////////////////////////////////////////////
exports.upload = function( uploadFiles, destDirPath, callback  ){

	var task = [];
	// 一時ファイルのパス
	var fileList = [];
	var index    = 0;
	var uploadList = [];
	if(!uploadFiles.length){
		console.log('single file');
		fileList.push(uploadFiles);
	}else {
		fileList = uploadFiles;//二つ以上の場合配列で送られてくる。
	}

	for(var i=0;i<fileList.length;i++){

		//同名ファイルの存在調査
		task.push(function( cb ){
			// 正しい名前
			var fileName    = fileList[index].name;
			var target_path = destDirPath + '/' + fileName;
			var tmp_path    = fileList[index].path;
			/*
			if(fs.existsSync(target_path)){
				try{fs.unlinkSync(tmp_path);}catch(e){}//tempファイルの削除
				cb('同名ファイルが処理中です。時間をおいて実行してください。');
			}else{
				cb( null, tmp_path , target_path );
			}*/
			///同名あったら消す
			try{fs.unlinkSync(target_path);}catch(e){}
			cb( null, tmp_path , target_path );
		});

		task.push(function( tmp_path , target_path , cb ){
			uploadList.push(target_path);
			var command = "mv -f '" + tmp_path + "' '" + target_path + "'";
			exec(command,function(err,stdout,stderr){
				index++;
				if(err)cb(err);
				else if(stderr)cb(stderr);
				else cb(null);
			});
		});
	}

	async.waterfall(task,function(err){
		if(err){
			callback(err);
		}else{
			callback( null , uploadList );
		}
	});

};
